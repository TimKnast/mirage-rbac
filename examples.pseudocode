Examples of proposed data structures and their use

====
Identity:
consists of an identifier (uint64?)
and cow versions of capabilities as defined by the capability model
- can also include special capabilities such as auth caps - need to come up with a way to configure this (which states can auth, what kind of cooperation do we need from client domain, should we do kerberos-like tickets, ... ) - apply rules before calling to enforce pw length, ..? - supply settings to auth framework - name for plugin ztuff?

====
Hook:

rbac_hook : query -> page_query_data -> bool
match rbac_hook ViewPage (get_page_data page_id) with
| true -> display_page page_id 
| false -> display_page frontpage

rbac_hook_may_change_state : query -> page_query_data -> ( bool * state * identity )
rbac_hook EditPage page_query_data
  : (true, Elevated, 123)
(* note that the state can be deduced by examining state transition declaration and returned decision, it's provided to add clarity and enable easy-to-read pattern matching. *)

====
Connection to RBAC:

rbac_session : CapabilityModel -> <abstract>
rbac_session WebVisitor
  : <abstract> RBACSession


